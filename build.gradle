// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: "version_config.gradle"
apply from: "version.gradle"

buildscript {

    repositories {
        repositories {
            google()
            maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
            jcenter()
        }

    }
    dependencies {


       /* classpath 'org.aspectj:aspectjtools:1.8.9'
        classpath 'org.aspectj:aspectjweaver:1.8.9'*/

        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.0'





        classpath 'com.android.tools.build:gradle:3.1.4'

        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8' // 添加这行
        //定义在这里，这样每个module都可以使用
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
        // 配置自动上传符号表插件，注：为了能快速并准确地定位用户APP发生Crash的代码位置，Bugly使用符号表对APP发生Crash的程序堆栈进行解析和还原
        //butterknife插件
        classpath 'com.jakewharton:butterknife-gradle-plugin:8.4.0'  //在library中使用需要添加这一行


        classpath 'com.billy.android:cc-register:1.0.9' //集成cc



        //classpath 'com.github.SmartDengg.asm-clickdebounce:click-debounce-gradle-plugin:1.2.0'
    }
}



allprojects{
    repositories {
        google()
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        jcenter()
    }

    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
    }
}



String SDK_DIR = System.getenv("ANDROID_SDK_HOME")
if (SDK_DIR == null) {
    Properties props = new Properties()
    props.load(new FileInputStream(project.rootProject.file("local.properties")))
    SDK_DIR = props.get('sdk.dir');
}



/**
 *获取apk
 */
task archiveOutApks(type: Copy){
    from('app/build/outputs/apk')
    exclude '*unaligned*'
    into('./outapk/archives')
}




task clean(type: Delete) {
    delete rootProject.buildDir
    delete 'outapk/archives'
}
