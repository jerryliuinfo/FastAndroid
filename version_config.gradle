ext {

    //Android编译版本管理
    android = [
            compileSdkVersion:  30,
            minSdkVersion    : 23,
            targetSdkVersion : 30,

            versionCode : 10003,
            //major:minor.patch
            versionName :"1.0.3"
    ]

    sourceCompatibilityVersion = JavaVersion.VERSION_1_8
    targetCompatibilityVersion = JavaVersion.VERSION_1_8

    designVersion = "27.0.1"

    buglyVersion = '3.2.1'
    buglyNativeVersion = '3.7.1'
    fastjsonVersion = "1.2.29"
    junitVersion = "4.12"

    rxandroidVersion = "2.0.1"
    rxjavaVersion = "2.0.8"



    eventbusVersion = "3.1.0-RC"

    constraintLayoutVersion = "1.1.3"


    fastandroidVersion = "1.6.3"

    //bintray相关
    publishVersion = '1.3.6'
    userOrg = 'xiangxiangliu'// bintray注册的用户名
    groupId = 'com.xiangxiangliu'
    desc = 'Oh hi, this is a android fast develpe framwork'
    website = 'https://github.com/jerryliuinfo/FastAndroid'
    licences = ['Apache-2.0']


    appCompat = "1.2.0"

    leakcanary = "1.6.3"
    retrofitVersion = "2.8.1"
    lifecycle_version = "2.3.1"

    roomVersion = "2.2.6"
    okHttpVersion = "4.8.0"

    navigationVersion = '2.3.5'



    buildToolsVersion = "31.0.0"
    androidxAnnotationVersion = "1.2.0"
    robolectricVersion = "4.6.1"
    guavaVersion = "30.1.1-android"
    extTruthVersion = '1.3.0-rc01'
    coreVersion = "1.4.1-alpha03"
    extJUnitVersion = "1.1.4-alpha03"
    runnerVersion = "1.4.1-alpha03"
    espressoVersion = "3.5.0-alpha03"
    immersionbar = "3.0.0"


    thirdLib = [
            bugly                            : "com.tencent.bugly:crashreport:4.0.0",
            buglyNativeCrash                 : "com.tencent.bugly:nativecrashreport:4.0.0",

            okhttp3                          : "com.squareup.okhttp3:okhttp:$okHttpVersion",
            okhttp3_boom                     : "com.squareup.okhttp3:okhttp-bom:${okHttpVersion}",
            okhttp3_log                      : "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",


            reactivexRxjava2                : "io.reactivex.rxjava3:rxjava:3.0.0",
//            reactivexRxandroid               : "io.reactivex.rxjava2:rxandroid:2.1.1",
            reactivexRxandroid               : "io.reactivex.rxjava3:rxandroid:3.0.0",

            retrofit                         : 'com.squareup.retrofit2:retrofit:2.8.1',
            retrofitConverterGson            : 'com.squareup.retrofit2:converter-gson:2.8.1',
            retrofitConverterScalars         : 'com.squareup.retrofit2:converter-scalars:2.8.1',

//            retrofitAdapterRx                : 'com.squareup.retrofit2:adapter-rxjava2:2.8.1',
            retrofitAdapterRx                : 'com.squareup.retrofit2:adapter-rxjava3:2.9.0',


            glide                            :  'com.github.bumptech.glide:glide:3.7.0',
            glideOkhttp                      :  'com.github.bumptech.glide:okhttp3-integration:3.7.0',


            utilcodex                        :  'com.blankj:utilcodex:1.31.0',
            qmui                             :  'com.qmuiteam:qmui:2.0.0-alpha10',
            gson                             :  'com.google.code.gson:gson:2.8.2',
            fastjson                         :  'com.alibaba:fastjson:1.2.29',
            brvh                             :  'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30',
            mmkv                             :  'com.tencent:mmkv-static:1.2.10',
            superTextView                    :  'com.github.lygttpod:SuperTextView:2.4.6',
            banner                           :  'com.youth.banner:banner:2.1.0',
            agentweb                         :  'com.github.Justson.AgentWeb:agentweb-core:v4.1.9',
            picasso                          :  'com.squareup.picasso:picasso:2.5.2',
            imageLoader                      :  'com.nostra13.universalimageloader:universal-image-loader:1.9.3',
            jsbridge                         :  'com.github.lzyzsd:jsbridge:1.0.4',
            aspectjrt                        :  'org.aspectj:aspectjrt:1.8.9',
            blockcanary                      :  'com.github.markzhai:blockcanary-android:1.5.0',
            leakcanary                       :  'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3',
            permissionx                      :  'com.permissionx.guolindev:permissionx:1.4.0',
            //https://github.com/B3nedikt/ViewPump
            viewpump                         :  'dev.b3nedikt.viewpump:viewpump:4.0.7',
            //https://github.com/NoEndToLF/AppStartFaster
            AppStartFaster                   :  'com.github.NoEndToLF:AppStartFaster:1.0.3',

            //https://github.com/xuexiangjys/XUI
            XUI                              :  'com.github.xuexiangjys:XUI:1.1.8',

            //https://github.com/KingJA/LoadSir
            loadSir                          :  'com.kingja.loadsir:loadsir:1.3.8',
            lottie                           :  'com.airbnb.android:lottie:2.8.0',
//            logger                           :  "com.orhanobut:logger:2.2.0",
            //https://github.com/jaredrummler/AndroidDeviceNames
            device_name                           :  "com.jaredrummler:android-device-names:2.1.0",
            AnyLayer                           :  "com.github.goweii:AnyLayer:4.1.4-androidx",
            EasyTrack                          :  "com.github.pengxurui:EasyTrack:v1.0.1",
            PermissionMonitor                  :  "com.github.huage2580:PermissionMonitor:1.0.1",
            weishu                             :  "me.weishu:epic:1.0.0",
            AppDress                           :  "com.github.lenebf:AppDress:Tag",
            sdk_edit                           :  "com.github.iwhys:sdk-editor-plugin:1.1.7",
            flexible_divider                   :  "com.yqritc:recyclerview-flexibledivider:1.4.0",
            immersionbar                       :  "com.gyf.immersionbar:immersionbar:${immersionbar}",
            immersionbar_components            :  "com.gyf.immersionbar:immersionbar-components:${immersionbar}",
            immersionbar_ktx                   :  "com.gyf.immersionbar:immersionbar-ktx:${immersionbar}",


    ]


    androidLib = [
            appcompatV7                      : 'androidx.appcompat:appcompat:1.1.0',
            googleMaterial                   : 'com.google.android.material:material:1.4.0-alpha01',

            constraintLayout                 : 'androidx.constraintlayout:constraintlayout:2.0.4',
            cardview                         : 'androidx.cardview:cardview:1.0.0',
            recyclerview                     : 'androidx.recyclerview:recyclerview:1.1.0',
            // Android KTX 是包含在 Android Jetpack 及其他 Android 库中的一组 Kotlin 扩展程序。KTX 扩展程序可以为 Jetpack、Android 平台及其他 API 提供简洁的惯用 Kotlin 代码。
            core_ktx                         : "androidx.core:core-ktx:1.6.0",
            androidx_activity_ktx            : "androidx.activity:activity-ktx:1.3.1",
            androidx_fragment_ktx            : "androidx.fragment:fragment-ktx:1.3.6",



            palette                          : "androidx.palette:palette-ktx:1.0.0",

            androidx_annotaion               : "androidx.annotaion:annotation:1.0.0",


            //Kotlin
            kotlin_stdlib                    : "org.jetbrains.kotlin:kotlin-stdlib:1.6.10",
            kotlin_reflect                   : "org.jetbrains.kotlin:kotlin-reflect:${Versions.INSTANCE.kotlin_stdlib}",





            navigation_fragment_ktx          : "androidx.navigation:navigation-fragment-ktx:$navigationVersion",
            navigation_ui_ktx                : "androidx.navigation:navigation-ui-ktx:$navigationVersion",


            androidx_lifecycle_common        : "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version",
            androidx_lifecycle_runtime       : "androidx.lifecycle:lifecycle-runtime:$lifecycle_version",

            // ViewModel的KTX扩展库，可以让我们在ViewModel中方便的使用Coroutine
            androidx_lifecycle_viewmodel_ktx : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version",
            // LiveData的KTX扩展库，
            androidx_lifecycle_livedata      : "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version",

            //Room
            room_runtime                     : "androidx.room:room-runtime:$roomVersion",
            room_ktx                         : "androidx.room:room-ktx:$roomVersion",
            room_compiler                    : "androidx.room:room-compiler:$roomVersion",


            //coroutines
            kotlinx_coroutines_core          : "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5",
            kotlinx_coroutines_android       : "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5",

            // optional - helpers for implementing LifecycleOwner in a Service
            androidx_lifecycle_service       :"androidx.lifecycle:lifecycle-service:$lifecycle_version",

            androidx_workmanager             : "androidx.work:work-runtime:2.2.0",

            //分包
            multidex                         :  "androidx.multidex:multidex:2.0.0",

    ]




    //所有模块的公共库，务必不要随意在这里面添加依赖
    dependencies2 = [
            publicImplementation: [
                    rootProject.androidLib.appcompatV7,
                    rootProject.androidLib.googleMaterial,
                    rootProject.androidLib.cardview,
                    rootProject.androidLib.palette,


                    rootProject.androidLib.core_ktx,
                    rootProject.androidLib.androidx_activity_ktx,
                    rootProject.androidLib.androidx_fragment_ktx,

                    rootProject.androidLib.kotlin_stdlib,
                    rootProject.androidLib.kotlin_reflect,

                    rootProject.androidLib.androidx_lifecycle_common,
                    rootProject.androidLib.androidx_lifecycle_runtime,
                    rootProject.androidLib.androidx_lifecycle_livedata,
                    rootProject.androidLib.androidx_lifecycle_viewmodel_ktx,

                    rootProject.androidLib.kotlinx_coroutines_core,
                    rootProject.androidLib.kotlinx_coroutines_android,

                    rootProject.androidLib.navigation_fragment_ktx,
                    rootProject.androidLib.navigation_ui_ktx,





                    rootProject.thirdLib.reactivexRxjava2,
                    rootProject.thirdLib.reactivexRxandroid,

                    rootProject.thirdLib.bugly,

                    rootProject.thirdLib.gson,
                    rootProject.thirdLib.fastjson,
                    rootProject.thirdLib.qmui,

                    rootProject.thirdLib.glide,


                    rootProject.thirdLib.brvh,
                    rootProject.thirdLib.mmkv,
                    rootProject.thirdLib.utilcodex,
                    rootProject.thirdLib.AnyLayer,
                    rootProject.thirdLib.EasyTrack,
                    rootProject.thirdLib.PermissionMonitor,
                    rootProject.thirdLib.weishu,
                    rootProject.thirdLib.flexible_divider,


                    rootProject.thirdLib.immersionbar_components,
                    rootProject.thirdLib.immersionbar_ktx,
                    rootProject.thirdLib.immersionbar,

//                    rootProject.thirdLib.AppDress,
//                    rootProject.thirdLib.sdk_edit,
            ]
    ]

    dependencies = [
            basic: [
                    ':fastFramework',
                    ':baselib',
            ]

    ]
}


/**
 * 读取本机配置，主要用于本地差异化构建(local.properties不会提交到仓库)
 */
def readLocalProperty(String key) {
//    boolean value = false
    String value = ""
    def file = rootProject.file('local.properties')
    if (file.exists() && file.isFile()) {
        Properties properties = new Properties()
        properties.load(file.newDataInputStream())
//        value = Boolean.parseBoolean(properties.getProperty(key, 'false'))
        value = properties.getProperty(key, '')
    }
    println(String.format("property222 key=%s value=%S", key, value))
    return value
}

def readLocalBooleanProperty(String key) {
    boolean value = false
    def file = rootProject.file('local.properties')
    if (file.exists() && file.isFile()) {
        Properties properties = new Properties()
        properties.load(file.newDataInputStream())
        value = Boolean.parseBoolean(properties.getProperty(key, 'false'))
    }
    println(String.format("property key=%s value=%S", key, value))
    return value
}
ext.readLocalProperty = this.&readLocalProperty
ext.readLocalBooleanProperty = this.&readLocalBooleanProperty
